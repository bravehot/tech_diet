import {
  View,
  Text,
  StyleSheet,
  ImageBackground,
  KeyboardAvoidingView,
  Platform,
} from "react-native";
import { Controller, useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { LinearGradient } from "expo-linear-gradient";
import { Image } from "expo-image";

import {
  FormControl,
  FormControlLabel,
  FormControlLabelText,
} from "@/components/ui/form-control";
import { Input, InputField } from "@/components/ui/input";
import { VStack } from "@/components/ui/vstack";
import { Button, ButtonText } from "@/components/ui/button";
import { Svg, SvgUri, SvgXml } from "react-native-svg";

const bgImage = require("../assets/images/login_bg.png");
const logoImage = require("../assets/images/logo.png");

const createLoginSchema = z.object({
  phone: z
    .string()
    .min(11, "请输入手机号")
    .regex(new RegExp("/^1[3-9]d{9}$/"), "请输入中国大陆地区手机号"),
  captcha: z.string().min(4, "请输入图形验证码").max(4, "请输入图形验证码"),
});

type LoginSchemaType = z.infer<typeof createLoginSchema>;

export default function Login() {
  const {
    control,
    formState: { errors },
    handleSubmit,
    reset,
  } = useForm<LoginSchemaType>({
    resolver: zodResolver(createLoginSchema),
  });

  const getSmsCode = () => {};

  const xml = `<svg xmlns="http://www.w3.org/2000/svg" width="150" height="50" viewBox="0,0,150,50">
    <path fill="#333" d="M89.08 39.88L89.02 39.82L87.20 39.94L87.12 39.86Q86.06 39.75 85.11 39.86L85.14 39.90L85.22 39.98Q85.85 33.84 85.85 29.84L85.75 29.74L85.75 29.73Q81.84 23.12 74.19 14.44L74.09 14.35L74.07 14.33Q75.97 15.43 79.32 16.23L79.31 16.21L79.21 16.12Q84.41 21.84 87.41 27.06L87.43 27.07L87.31 26.95Q90.34 21.42 94.72 16.40L94.73 16.41L94.77 16.44Q97.13 15.99 99.65 15.19L99.69 15.24L99.71 15.26Q93.57 21.26 88.70 29.67L88.74 29.71L88.78 29.75Q88.70 36.72 89.01 39.81ZM98.11 17.24L100.88 14.45L100.79 14.36Q97.76 15.60 94.64 16.05L94.68 16.09L94.59 16.00Q90.49 20.84 87.67 25.95L87.59 25.87L87.66 25.94Q85.42 22.18 82.23 18.29L82.28 18.35L82.21 18.28Q81.98 18.31 81.48 18.24L81.58 18.33L81.61 18.36Q80.75 17.38 79.22 15.71L79.35 15.83L79.25 15.74Q75.83 14.94 72.86 13.38L73.00 13.52L72.93 13.45Q80.76 22.04 85.52 29.96L85.50 29.94L85.42 29.87Q85.39 36.27 84.78 40.42L84.64 40.28L84.62 40.25Q85.46 40.33 86.91 40.22L86.94 40.25L86.96 41.30L86.96 41.30Q86.86 41.65 86.78 42.19L86.90 42.31L86.90 42.30Q90.46 42.33 92.22 42.52L92.15 42.45L92.16 42.47Q90.81 37.69 90.70 31.71L90.78 31.80L90.85 31.87Q95.17 23.36 101.72 16.01L101.70 15.99L98.21 17.34Z"/>
    <path fill="#111" d="M29.08 32.12L19.95 22.22L19.84 22.11Q20.65 25.78 20.65 29.51L20.79 29.65L20.67 29.52Q20.63 35.46 18.57 41.02L18.75 41.20L18.68 41.13Q17.58 41.36 15.34 42.12L15.37 42.16L15.43 42.22Q18.26 36.44 18.26 29.74L18.14 29.62L18.20 29.69Q18.18 21.02 13.69 13.60L13.60 13.51L13.71 13.62Q14.15 13.80 14.84 14.22L14.76 14.14L14.68 14.06Q26.92 25.43 34.77 34.68L34.81 34.72L34.66 34.57Q34.47 32.24 34.47 29.81L34.37 29.71L34.39 29.73Q34.37 22.48 36.89 16.28L36.91 16.30L36.91 16.31Q39.32 15.86 40.92 15.17L40.83 15.08L40.80 15.05Q37.46 21.19 37.16 28.35L37.32 28.51L37.29 28.48Q36.85 35.69 39.82 41.86L39.91 41.95L39.82 41.86Q39.30 41.83 38.88 41.64L38.84 41.60L38.87 41.63Q34.34 37.72 29.13 32.16L29.20 32.23ZM42.56 45.17L42.58 45.19L42.56 45.18Q42.98 45.29 43.40 45.48L43.37 45.45L44.26 45.84L44.20 45.78Q39.18 38.98 39.18 29.61L39.07 29.50L39.15 29.58Q39.16 22.36 42.47 16.11L42.38 16.02L42.42 16.07Q41.67 16.19 40.27 16.80L40.34 16.88L40.31 16.85Q40.78 16.10 41.62 14.54L41.67 14.59L41.65 14.57Q39.03 15.30 36.59 15.87L36.57 15.85L36.75 16.03Q34.10 22.48 34.10 29.90L33.95 29.75L34.04 29.84Q34.08 31.74 34.27 33.72L34.25 33.70L34.13 33.58Q29.48 27.91 24.72 23.30L24.92 23.49L14.65 13.61L14.64 13.60Q14.19 13.42 12.97 12.85L12.88 12.75L12.91 12.78Q17.74 20.47 17.74 29.57L17.86 29.69L17.90 29.73Q17.91 36.86 14.83 42.87L14.77 42.81L14.70 42.74Q15.07 42.70 16.71 42.09L16.64 42.02L16.60 41.98Q16.31 42.80 15.48 44.28L15.61 44.41L15.54 44.35Q16.84 43.78 20.31 42.98L20.40 43.08L20.36 43.04Q22.63 36.86 22.63 29.66L22.69 29.72L22.69 29.72Q22.62 27.55 22.39 25.42L22.47 25.50L22.38 25.42Q33.83 38.20 42.44 45.05Z"/>
    <path d="M18 12 C72 10,85 12,142 24" stroke="#333" fill="none"/>
    <path fill="#333" d="M51.59 19.24L51.46 19.11L51.50 19.15Q52.66 23.66 52.82 26.86L52.84 26.88L52.82 26.86Q53.37 26.95 57.74 27.07L57.66 26.98L57.67 26.99Q60.25 27.06 60.64 23.60L60.61 23.57L60.71 23.67Q60.82 21.84 59.90 20.93L59.93 20.95L59.84 20.86Q58.56 19.96 56.58 19.81L56.69 19.92L56.62 19.85Q53.47 19.71 51.61 19.25ZM52.98 28.85L52.92 28.79L52.90 28.77Q53.08 34.77 51.29 40.71L51.39 40.81L51.43 40.85Q50.06 41.04 47.47 42.07L47.40 42.00L47.43 42.03Q50.30 35.57 49.95 28.11L50.01 28.16L49.96 28.11Q49.67 20.78 46.36 14.27L46.28 14.19L46.27 14.18Q51.18 17.03 58.14 17.03L58.22 17.11L58.26 17.15Q63.76 17.02 64.03 20.56L64.17 20.70L64.05 20.58Q64.11 21.17 64.04 21.78L64.19 21.93L63.93 22.90L63.97 22.94Q63.16 26.89 61.03 28.60L61.06 28.63L61.09 28.66Q60.28 29.34 59.26 29.34L59.15 29.23L56.53 29.20L56.57 29.24Q62.22 36.53 66.75 41.10L66.74 41.08L66.75 41.10Q64.63 40.42 61.69 40.08L61.55 39.93L61.66 40.04Q57.76 35.95 52.85 28.72ZM61.57 40.45L61.49 40.37L61.84 40.41L63.01 41.58L63.07 41.64Q63.66 42.19 64.30 42.80L64.21 42.71L64.23 42.72Q67.73 43.30 71.31 45.16L71.48 45.33L71.35 45.20Q64.42 38.46 59.01 31.53L59.11 31.63L60.91 31.68L60.87 31.64Q63.99 31.67 65.32 27.14L65.17 26.99L65.20 27.03Q65.88 24.81 65.88 22.10L65.87 22.09L65.96 22.19Q65.98 19.92 64.27 19.28L64.24 19.25L64.12 19.12Q64.04 18.78 63.47 18.09L63.45 18.08L63.47 18.09Q61.94 16.79 58.28 16.72L58.28 16.72L58.10 16.53Q50.38 16.54 45.70 13.54L45.67 13.51L45.62 13.46Q49.42 20.34 49.76 28.03L49.61 27.88L49.65 27.92Q50.07 35.96 46.95 42.81L46.87 42.73L46.85 42.70Q48.23 42.26 49.03 41.96L48.91 41.84L47.95 44.15L48.03 44.23Q50.81 43.24 53.47 42.74L53.33 42.60L53.38 42.65Q54.61 37.48 54.80 32.27L54.82 32.29L54.75 32.22Q58.30 37.22 61.46 40.34ZM60.18 22.38L60.33 22.53L60.24 22.44Q60.23 22.66 60.23 23.01L60.31 23.08L60.21 23.55L60.33 23.68Q60.28 24.73 59.59 25.68L59.66 25.75L59.59 25.67Q59.02 26.47 58.10 26.66L58.14 26.70L58.10 26.66Q57.94 26.77 56.34 26.81L56.15 26.62L56.31 26.77Q55.63 26.71 54.80 26.59L54.90 26.69L54.76 26.55Q54.65 25.04 54.31 21.99L54.32 22.00L54.30 21.98Q55.77 22.24 56.46 22.24L56.45 22.23L56.51 22.29Q58.35 22.30 60.29 22.49Z"/>
    <path fill="#333" d="M115.70 19.67L115.65 19.63L115.65 19.62Q113.73 19.79 112.77 19.95L112.80 19.97L112.73 19.90Q111.04 20.07 109.82 20.60L110.01 20.79L109.99 20.78Q106.31 22.05 106.20 26.73L106.36 26.89L106.39 26.92Q106.17 29.44 106.82 32.38L106.92 32.48L106.94 32.50Q107.67 36.38 111.28 37.56L111.27 37.55L111.39 37.67Q113.35 38.30 114.80 38.15L114.76 38.11L115.15 38.04L115.07 37.96Q115.23 37.93 115.42 37.97L115.57 38.13L115.44 37.99Q115.58 37.98 115.73 37.94L115.78 37.99L115.77 37.98Q118.51 37.82 119.88 37.25L119.83 37.20L116.17 33.58L116.27 33.69Q116.55 33.32 117.16 32.71L117.10 32.65L118.11 31.83L118.03 31.75Q119.86 33.80 121.84 35.86L121.92 35.94L121.88 35.91Q124.26 34.13 124.52 28.76L124.47 28.71L124.42 28.66Q124.59 27.84 124.59 26.93L124.55 26.88L124.63 26.96Q124.53 21.19 119.47 20.09L119.52 20.14L119.54 20.17Q118.23 19.85 115.72 19.69ZM128.44 41.70L128.36 41.62L128.52 41.79Q127.79 42.08 126.61 42.95L126.64 42.99L122.36 39.43L122.20 39.27Q119.78 40.54 115.52 40.58L115.48 40.54L115.51 40.57Q109.07 40.80 106.25 38.55L106.22 38.52L106.14 38.44Q104.38 36.68 103.92 33.71L103.89 33.68L103.89 33.67Q103.68 31.87 103.30 28.29L103.31 28.30L103.40 28.38Q103.44 27.71 103.33 25.96L103.26 25.89L103.30 25.93Q103.19 24.41 103.23 23.53L103.07 23.37L103.21 23.52Q103.32 20.47 105.07 18.91L105.09 18.92L105.10 18.93Q106.46 17.44 109.66 16.94L109.63 16.92L109.72 17.00Q112.22 16.65 115.12 16.73L115.15 16.77L115.16 16.78Q122.58 16.81 125.70 19.17L125.76 19.22L125.77 19.24Q127.96 21.38 127.69 26.29L127.61 26.21L127.54 26.15Q127.38 29.83 127.19 31.16L127.25 31.22L127.32 31.29Q126.65 35.76 124.33 38.08L124.24 38.00L124.33 38.09Q125.68 39.21 128.42 41.68ZM123.55 17.39L123.67 17.52L123.56 17.40Q121.50 16.64 114.99 16.15L115.01 16.17L115.17 16.33Q113.70 16.27 110.92 16.38L110.87 16.33L110.98 16.44Q106.68 16.59 104.43 18.57L104.39 18.53L104.39 18.53Q102.75 20.01 102.75 23.17L102.82 23.24L102.73 23.15Q102.86 24.12 103.01 25.83L102.99 25.81L102.92 25.74Q103.15 27.53 103.15 28.40L103.04 28.29L103.19 28.44Q103.20 30.05 103.58 33.63L103.66 33.71L103.60 33.65Q104.01 36.57 105.61 38.63L105.62 38.64L105.66 38.68Q105.90 39.42 107.12 40.56L107.17 40.61L107.08 40.52Q109.95 42.66 115.12 42.93L115.10 42.91L114.97 42.78Q115.46 42.92 117.86 43.04L117.74 42.91L117.76 42.93Q122.60 43.13 124.88 42.07L124.78 41.96L124.92 42.11Q125.71 42.71 130.43 46.29L130.37 46.22L130.45 46.30Q131.10 45.81 132.39 44.82L132.34 44.76L132.42 44.84Q131.40 44.01 130.60 43.33L130.60 43.33L128.97 41.89L129.09 41.86L129.21 41.97Q128.54 41.42 127.32 40.39L127.43 40.51L127.40 40.47Q129.26 37.91 129.26 33.38L129.34 33.46L129.17 33.30Q129.17 32.88 129.21 32.04L129.24 32.07L129.30 32.13Q129.32 31.27 129.32 30.85L129.24 30.78L129.32 30.86Q129.27 25.29 128.55 22.93L128.66 23.04L128.61 22.99Q128.31 21.78 127.44 20.71L127.43 20.70L127.42 20.69Q126.61 18.55 123.68 17.53ZM117.51 21.94L117.69 22.12L117.61 22.04Q121.63 21.91 123.45 23.51L123.43 23.48L123.50 23.55Q124.13 24.83 124.25 26.16L124.27 26.19L124.21 26.13Q124.18 27.28 124.11 28.65L124.25 28.80L124.26 28.80Q123.93 33.77 121.99 35.48L121.86 35.35L121.93 35.42Q120.60 34.09 118.09 31.35L118.02 31.28L118.00 31.26Q117.37 32.16 115.81 33.72L115.74 33.65L115.73 33.64Q116.31 34.26 117.45 35.44L117.53 35.52L117.43 35.52L117.34 35.44Q117.97 36.03 119.00 37.10L118.95 37.05L118.95 37.05Q117.91 37.26 115.58 37.56L115.60 37.58L115.18 37.70L114.72 37.65L114.70 37.66L114.69 37.65Q111.34 37.77 109.36 36.13L109.18 35.96L109.32 36.10Q108.32 34.03 108.36 30.91L108.27 30.82L108.35 30.90Q108.51 22.19 117.68 22.11Z"/>
</svg>`;

  return (
    <View className="flex-1 bg-white">
      <KeyboardAvoidingView
        style={{ flex: 1 }}
        behavior={Platform.OS === "ios" ? "padding" : "height"}
      >
        <LinearGradient style={styles.gradient} colors={["#f0f0ff", "#ffffff"]}>
          <ImageBackground
            source={bgImage}
            resizeMode="cover"
            className="flex-1 justify-center items-center"
          >
            <View className="items-center">
              <Image
                style={styles.image}
                source={logoImage}
                contentFit="cover"
                transition={1000}
              />

              <Text
                className="text-primary-500 text-4xl my-6"
                style={{ fontFamily: "AlimamaFangYuanTiVF-Thin" }}
              >
                科 技 识 狠 活
              </Text>

              <VStack className="w-4/5 gap-6 mt-8">
                <FormControl className="w-full gap-4">
                  <Controller
                    control={control}
                    name="phone"
                    rules={{
                      required: true,
                      validate: async (value) => {
                        try {
                          await createLoginSchema.parseAsync({
                            phone: value,
                          });
                          return true;
                        } catch (error: any) {
                          return error.message;
                        }
                      },
                    }}
                    render={({ field: { onChange, onBlur, value } }) => (
                      <>
                        <FormControlLabel className="mb-1">
                          <FormControlLabelText>手机号</FormControlLabelText>
                        </FormControlLabel>
                        <Input className="w-full">
                          <InputField
                            type="text"
                            placeholder="请输入手机号"
                            onChange={onChange}
                            onBlur={onBlur}
                            value={value}
                          />
                        </Input>
                      </>
                    )}
                  ></Controller>
                </FormControl>

                <FormControl className="w-full">
                  <Controller
                    control={control}
                    name="captcha"
                    rules={{
                      required: true,
                      validate: async (value) => {
                        try {
                          await createLoginSchema.parseAsync({
                            captcha: value,
                          });
                          return true;
                        } catch (error: any) {
                          return error.message;
                        }
                      },
                    }}
                    render={({ field: { onChange, onBlur, value } }) => (
                      <>
                        <FormControlLabel className="mb-1">
                          <FormControlLabelText>
                            图形验证码
                          </FormControlLabelText>
                        </FormControlLabel>

                        <View className="w-full flex flex-row items-center">
                          <Input className="flex-1">
                            <InputField
                              type="text"
                              placeholder="请输入图形验证码"
                              onChange={onChange}
                              onBlur={onBlur}
                              value={value}
                            />
                          </Input>
                          <SvgXml xml={xml} />
                        </View>
                      </>
                    )}
                  ></Controller>
                </FormControl>

                <Button isPressed onPress={handleSubmit(getSmsCode)} size="lg">
                  <ButtonText>获取短信验证码</ButtonText>
                </Button>
              </VStack>
            </View>
          </ImageBackground>
        </LinearGradient>
      </KeyboardAvoidingView>
    </View>
  );
}

const styles = StyleSheet.create({
  gradient: {
    flex: 1,
  },
  image: {
    width: 75,
    height: 75,
  },
});
